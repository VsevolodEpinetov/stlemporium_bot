const { Scenes, Markup } = require("telegraf");
const SETTINGS = require('../../../settings.json');
const util = require('../../util.js');
const emporiumUtils = require('../util.js')

const emporiumExactPhotoStage = new Scenes.BaseScene('EMPORIUM_STAGE_EXACT_PHOTO');

emporiumExactPhotoStage.enter((ctx) => {
  const id = ctx.session.passingId;
  ctx.replyWithHTML(`–ü—Ä–∏—à–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ —Å <a href="https://disk.yandex.ru/d/mWaGAzRqlSBRLQ">–Ø.–î–∏—Å–∫–∞</a> –ë–ï–ó –†–ê–°–®–ò–†–ï–ù–ò–Ø. –ù–∞–ø—Ä–∏–º–µ—Ä: <code>human8</code>. –ï—Å–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –Ω–∞–π–¥–µ–Ω–æ, —Ç–æ –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ä–∞–Ω–¥–æ–º–Ω–æ–µ`, {
    parse_mode: 'HTML'
  }).then(nctx => {
    ctx.globalSession.emporium.queue[id].lastBotMessageId = nctx.message_id;
  })
});

emporiumExactPhotoStage.command('exit', (ctx) => {
  util.log(ctx)
  ctx.scene.leave();
})


emporiumExactPhotoStage.on('message', async (ctx) => {
  const crID = ctx.session.passingId;
  const queueData = ctx.globalSession.emporium.queue[crID];
  const creatureData = queueData.data;

  const userFileName = ctx.message.text;
  const pathToBaseImage = await emporiumUtils.getExactImage(userFileName);
  const resultImageBuffer = await emporiumUtils.placePngAndGetPic(ctx, queueData.transparentFileId, pathToBaseImage)
  ctx.globalSession.emporium.queue[crID].data.preview = {
    buffer: resultImageBuffer
  }

  ctx.deleteMessage(queueData.lastBotMessageId).catch(e => {
    console.log(e)
  })
  
  ctx.reply('–ú–µ–Ω—è—é —Ñ–æ–Ω...')
  ctx.replyWithDocument({ source: resultImageBuffer, filename: `${creatureData.code}.png` }, {
    caption: `–î–∞–Ω–Ω—ã–µ\n\n–†–∞—Å—ã: ${creatureData.races.join(', ')}\n–ö–ª–∞—Å—Å—ã: ${creatureData.classes.join(', ')}\n–û—Ä—É–∂–∏–µ: ${creatureData.weapons.join(', ')}\n\n–°—Ç—É–¥–∏—è: ${creatureData.studioName}\n–†–µ–ª–∏–∑: ${creatureData.releaseName}\n–ö–æ–¥:${creatureData.code}\n\n–ü–æ–ª: ${creatureData.sex}`,
    parse_mode: 'HTML',
    ...Markup.inlineKeyboard([
      [
        Markup.button.callback('‚öîÔ∏è –§–æ–Ω –∫–ª–∞—Å—Å', `action-change-bg-classes-${crID}`),
        Markup.button.callback('üßù‚Äç‚ôÄÔ∏è –§–æ–Ω —Ä–∞—Å–∞', `action-change-bg-races-${crID}`),
      ],
      [ 
        Markup.button.callback('‚öîÔ∏èüßù‚Äç‚ôÄÔ∏è –§–æ–Ω –ö+–†', `action-change-bg-any-${crID}`)
      ],
      [
        Markup.button.callback('‚ôªÔ∏è –§–æ–Ω —Ä–∞–Ω–¥–æ–º', `action-change-bg-random-${crID}`),
        Markup.button.callback('üìç –§–æ–Ω –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π', `action-change-bg-exact-${crID}`),
      ],
      [
        Markup.button.callback('‚úÖ –ù–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ', `action-emporium-confirm-${crID}`)
      ]
    ])
  }).then(nctx => {
    ctx.globalSession.emporium.queue[crID].lastBotMessageId = nctx.message_id;
  })

  ctx.scene.leave();
})

emporiumExactPhotoStage.leave(async (ctx) => {
});

module.exports = emporiumExactPhotoStage;